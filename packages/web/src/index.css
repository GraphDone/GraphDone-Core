@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: 'Inter', system-ui, sans-serif;
  }
  
  body {
    @apply bg-gray-900 text-gray-100;
  }
}

@layer components {
  .btn {
    @apply px-4 py-2 rounded-lg font-medium transition-colors;
  }
  
  .btn-primary {
    @apply bg-green-600 text-white hover:bg-green-700 border border-green-500/30;
  }
  
  .btn-secondary {
    @apply bg-gray-700 text-gray-300 hover:bg-gray-600 border border-gray-600;
  }
  
  .card {
    @apply bg-white rounded-lg border border-gray-200 shadow-sm;
  }

  /* Text wrapping in table cells while preserving original table size */
  .table-text-content {
    word-wrap: break-word;
    overflow-wrap: break-word;
    word-break: break-word;
    white-space: normal;
    hyphens: auto;
    max-width: 300px; /* Reasonable width constraint for text wrapping */
  }
}

/* Graph visualization styles */
.graph-container {
  @apply w-full h-full overflow-hidden;
}

.node {
  @apply cursor-pointer transition-all duration-200;
}

/* Selected node stays solid and visible */
.node-selected {
  opacity: 1 !important;
  stroke-width: 2.5 !important;
  filter: drop-shadow(0 0 8px currentColor);
}

/* Expanding ring animation */
.expanding-ring {
  animation: ring-expand 1.5s ease-out infinite;
  transform-origin: center;
  pointer-events: none;
}

@keyframes ring-expand {
  0% {
    r: 20;
    stroke-opacity: 0.6;
    stroke-width: 3;
  }
  100% {
    r: 40;
    stroke-opacity: 0;
    stroke-width: 1;
    filter: blur(2px);
  }
}

.node:hover circle {
  filter: drop-shadow(0 0 6px currentColor);
  stroke-width: 2.5;
  transform: scale(1.05);
  transition: all 0.2s ease-in-out;
}

/* Style for completed nodes */
.node .completion-indicator {
  filter: drop-shadow(0 0 3px rgba(16, 185, 129, 0.5));
}

/* Text in completed nodes should be slightly dimmed */
.node text {
  transition: opacity 0.3s ease;
}

.node-circle {
  @apply stroke-2 stroke-current;
}

.node-text {
  @apply text-xs font-medium text-center pointer-events-none text-white;
}

.node-label-bright {
  fill: #ffffff !important;
  color: #ffffff !important;
}

/* Force all SVG text in graph visualization to be white - but NOT completion indicators */
.graph-container text:not(.completion-indicator) {
  fill: #ffffff !important;
  color: #ffffff !important;
}

.graph-container svg text:not(.completion-indicator) {
  fill: #ffffff !important;
  color: #ffffff !important;
}

/* Specifically target node labels */
svg text.node-label-bright {
  fill: #ffffff !important;
  color: #ffffff !important;
  stroke: #000000 !important;
  stroke-width: 3px !important;
}

/* Override any potential Tailwind text color classes - but NOT completion indicators */
.graph-container svg text:not(.completion-indicator),
.graph-container text:not(.completion-indicator) {
  @apply !text-white;
  fill: #ffffff !important;
  color: #ffffff !important;
}

/* Force all text in SVG to be white - but NOT completion indicators */
svg text:not(.completion-indicator) {
  fill: #ffffff !important;
  color: #ffffff !important;
}

/* Force text elements to be white - but NOT completion indicators */
* text:not(.completion-indicator) {
  fill: #ffffff !important;
  color: #ffffff !important;
}

/* HTML node labels - guaranteed white text */
.node-labels-container .node-label {
  color: #ffffff !important;
  text-shadow: 2px 2px 4px rgba(0,0,0,0.8) !important;
  font-weight: 700 !important;
}

.edge {
  @apply stroke-current opacity-60;
}

.edge-dependency {
  @apply stroke-blue-500;
}

.edge-blocks {
  @apply stroke-red-500;
}

.edge-relates {
  @apply stroke-gray-400;
}

/* Priority indicator styles */
.priority-high {
  @apply text-red-600;
}

.priority-medium {
  @apply text-yellow-600;
}

.priority-low {
  @apply text-green-600;
}