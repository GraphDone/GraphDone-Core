{
  "name": "@graphdone/mcp-server",
  "version": "0.3.1-alpha",
  "description": "MCP server for GraphDone graph operations",
  "main": "dist/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "dev": "echo 'MCP server should be started by Claude Code, not npm run dev. Use npm run dev:mcp to start manually.'",
    "dev:start": "tsx watch src/index.ts",
    "start": "node dist/index.js",
    "test": "vitest --run",
    "test:coverage": "vitest run --coverage", 
    
    "test:input": "vitest --run tests/garbage-input.test.ts",
    "test:security": "vitest --run tests/comprehensive-chaos.test.ts tests/multi-perspective-chaos.test.ts",
    "test:ddos": "vitest --run tests/concurrency-chaos.test.ts tests/network-protocol-chaos.test.ts tests/performance-chaos.test.ts",
    "test:stress": "vitest --run tests/resource-exhaustion-chaos.test.ts tests/distributed-systems-chaos.test.ts tests/filesystem-io-chaos.test.ts",
    
    "test:integration:local": "vitest --run tests/real-database-integration.test.ts tests/real-chaos-testing.test.ts",
    "test:safe:ci": "npm run test:input && npm run test:security",
    "test:unsafe:local": "npm run test:ddos && npm run test:stress && npm run test:integration:local",
    "lint": "eslint src --ext .ts",
    "typecheck": "tsc --noEmit",
    "clean": "rm -rf dist coverage",
    "ci:safe": "npm run lint && npm run typecheck && npm run test && npm run test:safe:ci",
    "ci:full:local": "npm run ci:safe && npm run test:unsafe:local"
  },
  "dependencies": {
    "@graphdone/core": "*",
    "@modelcontextprotocol/sdk": "^0.5.0",
    "neo4j-driver": "^5.15.0",
    "dotenv": "^16.3.0",
    "zod": "^3.22.0"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^8.39.1",
    "@typescript-eslint/parser": "^8.39.1",
    "@vitest/coverage-v8": "^1.0.0",
    "eslint": "^9.33.0",
    "globals": "^16.3.0",
    "tsx": "^4.6.0",
    "typescript": "^5.3.0",
    "vitest": "^1.0.0"
  },
  "files": [
    "dist",
    "src"
  ],
  "license": "MIT"
}